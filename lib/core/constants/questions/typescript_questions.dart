class TypescriptQuestions {
  static const List<String> junior = [
    "Что такое TypeScript и каковы его преимущества?",
    "В чем разница между TypeScript и JavaScript?",
    "Как установить TypeScript?",
    "Как скомпилировать TypeScript файл?",
    "Что такое tsconfig.json?",
    "Какие основные настройки в tsconfig.json?",
    "Что такое строгая типизация?",
    "Как объявить переменную с типом?",
    "Какие базовые типы есть в TypeScript?",
    "Что такое type annotation?",
    "Как работает тип string?",
    "Как работает тип number?",
    "Как работает тип boolean?",
    "Что такое тип any?",
    "Когда использовать any?",
    "Что такое тип unknown?",
    "В чем разница между any и unknown?",
    "Что такое тип void?",
    "Когда использовать void?",
    "Что такое тип never?",
    "Когда использовать never?",
    "Что такое тип null и undefined?",
    "Как работают массивы в TypeScript?",
    "Как объявить массив чисел?",
    "Как объявить массив строк?",
    "Что такое tuple тип?",
    "Как использовать tuple?",
    "Что такое enum?",
    "Как создать enum?",
    "Какие типы enum существуют?",

    "Как объявить функцию в TypeScript?",
    "Как указать типы параметров функции?",
    "Как указать тип возвращаемого значения?",
    "Что такое optional параметры?",
    "Как сделать параметр необязательным?",
    "Что такое default параметры?",
    "Как установить значение по умолчанию?",
    "Что такое rest параметры?",
    "Как использовать ... в параметрах?",
    "Что такое function overloading?",
    "Как объявить перегруженную функцию?",
    "Что такое arrow functions в TypeScript?",
    "Как указать типы для arrow functions?",
    "Что такое тип функции?",
    "Как объявить тип функции?",
    "Что такое higher-order functions?",
    "Как передавать функции как аргументы?",
    "Что такое callback типы?",
    "Как использовать this в TypeScript?",
    "Что такое this параметры?",
    "Как использовать generics в функциях?",
    "Что такое generic функции?",
    "Как создать generic функцию?",
    "Что такое type inference в функциях?",
    "Когда TypeScript выводит типы автоматически?",

    "Как типизировать объекты?",
    "Что такое interface?",
    "Как создать интерфейс?",
    "Что такое optional properties?",
    "Как сделать свойство необязательным?",
    "Что такое readonly properties?",
    "Как сделать свойство только для чтения?",
    "Что такое index signatures?",
    "Как использовать индексные сигнатуры?",
    "Что такое function types в интерфейсах?",
    "Как описать функцию в интерфейсе?",
    "Что такое extends для интерфейсов?",
    "Как наследовать интерфейсы?",
    "Что такое type aliases?",
    "В чем разница между type и interface?",
    "Когда использовать type, а когда interface?",
    "Что такое intersection types?",
    "Как использовать & для типов?",
    "Что такое union types?",
    "Как использовать | для типов?",

    "Как объявить класс в TypeScript?",
    "Как типизировать свойства класса?",
    "Как типизировать методы класса?",
    "Что такое конструктор класса?",
    "Как типизировать параметры конструктора?",
    "Что такое public, private, protected?",
    "В чем разница между модификаторами доступа?",
    "Что такое readonly в классах?",
    "Как использовать readonly свойства?",
    "Что такое static свойства и методы?",
    "Как объявить static член класса?",
    "Что такое abstract классы?",
    "Как создать абстрактный класс?",
    "Что такое наследование классов?",
    "Как использовать extends для классов?",

    "Как использовать тип any осторожно?",
    "Что такое type assertion?",
    "Как использовать as для утверждения типов?",
    "Что такое non-null assertion operator?",
    "Как использовать ! оператор?",
    "Что такое const assertion?",
    "Как использовать as const?",
    "Что такое keyof оператор?",
    "Как использовать keyof?",
    "Что такое typeof оператор в TypeScript?",
  ];

  static const List<String> middle = [
    "Что такое conditional types?",
    "Как использовать conditional types?",
    "Что такое infer ключевое слово?",
    "Как использовать infer в conditional types?",
    "Что такое mapped types?",
    "Как создать mapped type?",
    "Что такое Readonly<T>?",
    "Что такое Partial<T>?",
    "Что такое Required<T>?",
    "Что такое Pick<T, K>?",
    "Что такое Omit<T, K>?",
    "Что такое Record<K, T>?",
    "Что такое Exclude<T, U>?",
    "Что такое Extract<T, U>?",
    "Что такое NonNullable<T>?",
    "Что такое Parameters<T>?",
    "Что такое ReturnType<T>?",
    "Что такое ConstructorParameters<T>?",
    "Что такое InstanceType<T>?",
    "Как создавать собственные utility types?",

    "Что такое generics в TypeScript?",
    "Зачем нужны generics?",
    "Как объявить generic интерфейс?",
    "Как объявить generic класс?",
    "Как использовать generic constraints?",
    "Что такое extends в generics?",
    "Как ограничить generic параметр?",
    "Что такое default type parameters?",
    "Как установить тип по умолчанию для generic?",
    "Что такое generic conditional types?",
    "Как использовать conditional types с generics?",
    "Что такое generic mapped types?",
    "Как создавать mapped types с generics?",
    "Что такое keyof и generics?",
    "Как использовать keyof с generic типами?",
    "Что такое typeof с generics?",
    "Как комбинировать generics с union types?",
    "Как комбинировать generics с intersection types?",
    "Что такое variance в generics?",
    "Что такое covariance и contravariance?",

    "Что такое modules в TypeScript?",
    "Как использовать import/export?",
    "Что такое default export?",
    "Что такое named export?",
    "Как реэкспортировать модули?",
    "Что такое namespace?",
    "Как создать namespace?",
    "В чем разница между modules и namespaces?",
    "Когда использовать modules, а когда namespaces?",
    "Что такое ambient declarations?",
    "Как объявить ambient модуль?",
    "Что такое declaration files?",
    "Что такое .d.ts файлы?",
    "Как создать declaration file?",
    "Что такое triple-slash directives?",

    "Что такое strict mode?",
    "Какие опции включает strict mode?",
    "Что такое noImplicitAny?",
    "Что такое strictNullChecks?",
    "Что такое strictFunctionTypes?",
    "Что такое strictPropertyInitialization?",
    "Что такое noUnusedLocals и noUnusedParameters?",
    "Что такое target в tsconfig?",
    "Как выбрать target версию?",
    "Что такое module в tsconfig?",
    "Какие системы модулей поддерживаются?",
    "Что такое lib в tsconfig?",
    "Как настроить библиотеки TypeScript?",
    "Что такое paths в tsconfig?",
    "Как настроить alias пути?",

    "Как типизировать DOM элементы?",
    "Что такое HTMLElement тип?",
    "Как типизировать event handlers?",
    "Что такое Event тип?",
    "Как работать с внешними JavaScript библиотеками?",
    "Что такое DefinitelyTyped?",
    "Как установить типы для библиотеки?",
    "Что такое @types пакеты?",
    "Как создать типы для JavaScript библиотеки?",
    "Что такое declaration merging?",
    "Как объединять объявления типов?",
    "Что такое module augmentation?",
    "Как расширить типы существующего модуля?",
    "Что такое global augmentation?",
    "Как добавить глобальные типы?",

    "Как тестировать TypeScript код?",
    "Что такое Jest с TypeScript?",
    "Как настроить testing environment?",
    "Как использовать mocking в TypeScript?",
    "Что такое type guards?",
    "Как создать type guard?",
    "Что такое user-defined type guards?",
    "Как использовать typeof в runtime?",
    "Как использовать instanceof в TypeScript?",
    "Что такое discriminated unions?",
    "Как использовать discriminated unions?",
    "Что такое exhaustive checking?",
    "Как обеспечить exhaustive checks?",
    "Что такое assert функции?",
    "Как создать assert функцию?",
  ];

  static const List<String> senior = [
    "Что такое type-level programming?",
    "Как программировать на уровне типов?",
    "Что такое recursive types?",
    "Как создать recursive type?",
    "Что такое template literal types?",
    "Как использовать template literal types?",
    "Что такое string manipulation types?",
    "Как манипулировать строками на уровне типов?",
    "Что такое conditional type inference?",
    "Как использовать infer в сложных типах?",
    "Что такое variadic tuple types?",
    "Как использовать variadic tuples?",
    "Что такое rest elements в tuple types?",
    "Как использовать ... в tuple types?",
    "Что такое labeled tuple elements?",
    "Как использовать labeled tuples?",
    "Что такое const type parameters?",
    "Как использовать const с generic параметрами?",
    "Что satisfies оператор?",
    "Как использовать satisfies?",
    "Что такое override ключевое слово?",
    "Как использовать override?",
    "Что такое abstract конструкторы?",
    "Как типизировать abstract конструкторы?",
    "Что такое this-based type guards?",

    "Как оптимизировать компиляцию TypeScript?",
    "Что такое incremental compilation?",
    "Как настроить incremental компиляцию?",
    "Что такое project references?",
    "Как использовать project references?",
    "Что такое composite projects?",
    "Как настроить composite проекты?",
    "Что такое build mode?",
    "Как использовать --build флаг?",
    "Что такое declaration maps?",
    "Как настроить declaration maps?",
    "Что такое source maps в TypeScript?",
    "Как настроить source maps?",
    "Как уменьшить время компиляции?",
    "Что такое skipLibCheck?",

    "Как проектировать TypeScript приложения?",
    "Что такое dependency injection в TypeScript?",
    "Как реализовать DI в TypeScript?",
    "Что такое decorators?",
    "Как использовать decorators?",
    "Что такое class decorators?",
    "Что такое method decorators?",
    "Что такое property decorators?",
    "Что такое parameter decorators?",
    "Как создать custom decorator?",
    "Что такое metadata reflection?",
    "Как использовать reflect-metadata?",
    "Что такое mixins в TypeScript?",
    "Как реализовать mixins?",
    "Что такое interface segregation в TypeScript?",
    "Как применять SOLID принципы?",
    "Что такое dependency inversion в TypeScript?",
    "Как проектировать для тестируемости?",
    "Что такое hexagonal architecture в TypeScript?",
    "Как организовать слоистую архитектуру?",

    "Как интегрировать TypeScript с Webpack?",
    "Что такое ts-loader?",
    "Как настроить Webpack для TypeScript?",
    "Как интегрировать TypeScript с Babel?",
    "Что такое @babel/preset-typescript?",
    "Как использовать TypeScript с React?",
    "Что такое JSX в TypeScript?",
    "Как типизировать React компоненты?",
    "Что такое React.FC тип?",
    "Как типизировать hooks в React?",
    "Как использовать TypeScript с Node.js?",
    "Как типизировать Express приложения?",
    "Что такое TypeScript с Vue.js?",
    "Как использовать TypeScript с Angular?",
    "Что такое TypeScript в микросервисной архитектуре?",

    "Как обеспечить типобезопасность в runtime?",
    "Что такое runtime type checking?",
    "Как использовать Zod для валидации?",
    "Что такое io-ts?",
    "Как использовать io-ts для валидации?",
    "Что такое type-safe APIs?",
    "Как создать type-safe API?",
    "Что такое tRPC?",
    "Как использовать tRPC для type-safe APIs?",
    "Что такое GraphQL с TypeScript?",
    "Как типизировать GraphQL схемы?",
    "Что такое type-safe database queries?",
    "Как типизировать запросы к БД?",
    "Что такое Prisma с TypeScript?",
    "Как обеспечить end-to-end type safety?",

    "Как анализировать TypeScript код?",
    "Что такое TypeScript compiler API?",
    "Как использовать compiler API?",
    "Что такое AST в TypeScript?",
    "Как анализировать Abstract Syntax Tree?",
    "Что такое type coverage?",
    "Как измерить покрытие типов?",
    "Что такое type-level performance?",
    "Как измерять производительность системы типов?",
    "Что такое bundle size анализ для TypeScript?",
  ];
}
