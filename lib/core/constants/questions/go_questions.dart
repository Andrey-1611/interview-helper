class GoQuestions {
  static const List<String> junior = [
    "Что такое Go и каковы его основные особенности?",
    "Кто создал Go и почему?",
    "В чем философия языка Go?",
    "Как установить и настроить Go окружение?",
    "Какова структура Go программы?",
    "Что такое package main?",
    "Как работает функция main()?",
    "Какие основные типы данных есть в Go?",
    "Как объявить переменную в Go?",
    "В чем разница между var и :=?",
    "Что такое нулевые значения (zero values)?",
    "Как работают целые числа (int, int8, int16, int32, int64)?",
    "Что такое числа с плавающей точкой (float32, float64)?",
    "Как работает тип string?",
    "Что такое rune и byte?",
    "Как работает тип bool?",
    "Что такое комплексные числа (complex64, complex128)?",
    "Какие операторы есть в Go?",
    "Как работают условные операторы (if-else)?",
    "Можно ли использовать условия без скобок?",
    "Как работает switch в Go?",
    "Какие циклы есть в Go?",
    "Как работает for цикл?",
    "Можно ли использовать while в Go?",
    "Как использовать break и continue?",
    "Что такое goto в Go?",
    "Как работает defer?",
    "Что такое panic и recover?",
    "Как обрабатывать ошибки в Go?",
    "Что такое error тип?",

    "Как объявить функцию в Go?",
    "Что такое возвращаемые значения?",
    "Как вернуть несколько значений из функции?",
    "Что такое именованные возвращаемые значения?",
    "Как передавать параметры в функцию?",
    "В чем разница между передачей по значению и по ссылке?",
    "Что такое variadic функции?",
    "Как использовать ... в параметрах?",
    "Что такое анонимные функции?",
    "Как работают замыкания (closures) в Go?",
    "Что такое рекурсия в Go?",
    "Как объявить функцию как тип?",
    "Что такое function literals?",
    "Как передать функцию как аргумент?",
    "Что такое callback функции?",
    "Как работает init() функция?",
    "Что такое blank identifier (_)?",
    "Как игнорировать возвращаемые значения?",
    "Что такое built-in функции?",
    "Какие built-in функции есть в Go?",

    "Что такое массивы (arrays) в Go?",
    "Как объявить массив?",
    "Что такое срезы (slices)?",
    "В чем разница между массивом и срезом?",
    "Как создать срез?",
    "Что такое make() для срезов?",
    "Как работает append()?",
    "Как получить длину и емкость среза?",
    "Что такое capacity среза?",
    "Как работает копирование срезов?",
    "Что такое карты (maps)?",
    "Как создать карту?",
    "Как добавлять и удалять элементы из карты?",
    "Как проверить существование ключа в карте?",
    "Что такое struct?",
    "Как объявить структуру?",
    "Как создать экземпляр структуры?",
    "Что такое embedded structs?",
    "Как работает композиция в Go?",
    "Что такое теги структур (struct tags)?",
    "Как использовать json теги?",
    "Что такое интерфейсы (interfaces)?",
    "Как объявить интерфейс?",
    "Что такое пустой интерфейс (interface{})?",
    "Как работает type assertion?",

    "Что такое пакеты в Go?",
    "Как импортировать пакеты?",
    "В чем разница между разными стилями импорта?",
    "Что такое dot импорт?",
    "Как создать собственный пакет?",
    "Что такое видимость в пакетах?",
    "В чем разница между大写ом и нижним регистром?",
    "Что такое go.mod файл?",
    "Как работает Go modules?",
    "Как добавить зависимость?",
    "Что такое vendor директория?",
    "Как обновить зависимости?",
    "Что такое go.sum файл?",
    "Как работать с версиями пакетов?",
    "Что такое replace директив в go.mod?",

    "Как использовать fmt пакет?",
    "Что такое Println vs Printf?",
    "Как работать со строками (strings package)?",
    "Что делает strconv пакет?",
    "Как преобразовать строку в число?",
    "Как работать с временем (time package)?",
    "Что такое duration в Go?",
    "Как использовать os пакет?",
    "Что такое flag пакет?",
    "Как работать с аргументами командной строки?",
  ];

  static const List<String> middle = [
    "Что такое методы в Go?",
    "Как объявить метод для типа?",
    "В чем разница между function и method?",
    "Что такое value и pointer receivers?",
    "Когда использовать pointer receivers?",
    "Что такое interface satisfaction?",
    "Как работает duck typing в Go?",
    "Что такое embedding интерфейсов?",
    "Как работает type switching?",
    "Что такое type conversion?",
    "Как создать custom types?",
    "Что такое type aliases?",
    "Как работают generic в Go?",
    "Что такое type parameters?",
    "Как объявить generic функцию?",
    "Что такое constraints?",
    "Как использовать comparable и any?",
    "Что такое type sets?",
    "Как создать generic структуру?",
    "Что такое type inference?",

    "Что такое goroutines?",
    "Как запустить goroutine?",
    "Что такое GMP модель?",
    "Как работает планировщик Go?",
    "Что такое channels?",
    "Как создать канал?",
    "В чем разница между буферизированными и небуферизированными каналами?",
    "Как отправлять и получать данные из канала?",
    "Что такое select?",
    "Как работает default case в select?",
    "Что такое range over channel?",
    "Как закрыть канал?",
    "Как проверить, закрыт ли канал?",
    "Что такое sync package?",
    "Как использовать WaitGroup?",
    "Что такое Mutex?",
    "В чем разница между Mutex и RWMutex?",
    "Как работает Once?",
    "Что такое Cond?",
    "Как использовать Pool?",
    "Что такое atomic операции?",
    "Как использовать sync/atomic?",
    "Что такое context?",
    "Как использовать WithCancel, WithTimeout, WithDeadline?",
    "Что такое race condition и как ее обнаружить?",

    "Как работать с JSON?",
    "Что такое encoding/json?",
    "Как сериализовать структуру в JSON?",
    "Что такое marshal и unmarshal?",
    "Как использовать теги структур для JSON?",
    "Как работать с XML?",
    "Что такое encoding/xml?",
    "Как сериализовать в XML?",
    "Что такое YAML и как с ним работать?",
    "Как использовать go-yaml?",
    "Что такое protobuf?",
    "Как работать с gRPC в Go?",
    "Что такое database/sql?",
    "Как подключиться к базе данных?",
    "Как выполнять SQL запросы?",
    "Что такое sqlx?",
    "Как работать с транзакциями?",
    "Что такое connection pooling?",
    "Как использовать подготовленные выражения?",
    "Что такое миграции базы данных?",

    "Как писать тесты в Go?",
    "Что такое testing package?",
    "Как запустить тесты?",
    "Что такое table-driven tests?",
    "Как тестировать приватные функции?",
    "Что такое testify?",
    "Как использовать assert и require?",
    "Что такое mock тестирование?",
    "Как использовать gomock?",
    "Что такое integration tests?",
    "Как тестировать HTTP handlers?",
    "Что такое httptest?",
    "Как писать бенчмарки?",
    "Что такое benchmark тесты?",
    "Как анализировать производительность?",

    "Как использовать pprof?",
    "Что такое CPU profiling?",
    "Как анализировать память?",
    "Что такое memory profiling?",
    "Как найти утечки памяти?",
    "Что такое escape analysis?",
    "Как работает garbage collector в Go?",
    "Что такое GC tuning?",
    "Как уменьшить аллокации?",
    "Что такое sync.Pool и когда его использовать?",

    "Как создать HTTP сервер?",
    "Что такое net/http?",
    "Как работать с HTTP handlers?",
    "Что такое middleware в Go?",
    "Как создать REST API?",
    "Что такое routing?",
    "Как использовать gorilla/mux?",
    "Что такое WebSocket в Go?",
    "Как создать TCP сервер?",
    "Что такое net package?",
  ];

  static const List<String> senior = [
    "Как проектировать Go приложения?",
    "Что такое Clean Architecture в Go?",
    "Как реализовать Domain-Driven Design?",
    "Что такое Hexagonal Architecture?",
    "Как организовать структуру проекта?",
    "Что такое package organization?",
    "Как разделить код на слои?",
    "Что такое dependency injection в Go?",
    "Как использовать wire для DI?",
    "Что такое design patterns в Go?",
    "Как реализовать Singleton?",
    "Что такое Factory pattern?",
    "Как использовать Builder pattern?",
    "Что такое Strategy pattern?",
    "Как реализовать Observer pattern?",
    "Что такое Decorator pattern?",
    "Как использовать Adapter pattern?",
    "Что такое Facade pattern?",
    "Как реализовать Command pattern?",
    "Что такое Repository pattern?",
    "Как использовать Service layer?",
    "Что такое CQRS в Go?",
    "Как реализовать Event Sourcing?",
    "Что такое микросервисная архитектура?",
    "Как спроектировать микросервисы на Go?",

    "Что такое work stealing?",
    "Как работает планировщик Go?",
    "Что такое netpoller?",
    "Как работает I/O в Go?",
    "Что такое non-blocking I/O?",
    "Как реализовать worker pool?",
    "Что такое fan-out, fan-in?",
    "Как использовать pipeline pattern?",
    "Что такое rate limiting?",
    "Как реализовать circuit breaker?",
    "Что такое backpressure?",
    "Как обрабатывать overload?",
    "Что такое graceful shutdown?",
    "Как правильно останавливать goroutines?",
    "Что такое context propagation?",
    "Как передавать context через границы?",
    "Что такое tracing?",
    "Как реализовать distributed tracing?",
    "Что такое OpenTelemetry в Go?",
    "Как мониторить goroutines?",

    "Как оптимизировать Go приложения?",
    "Что такое escape analysis?",
    "Как уменьшить аллокации?",
    "Что такое stack vs heap?",
    "Как работает memory management?",
    "Что такое GC pauses?",
    "Как настроить garbage collector?",
    "Что такое GODEBUG?",
    "Как использовать gctrace?",
    "Что такое inlining?",
    "Как работает компилятор Go?",
    "Что такое compiler optimizations?",
    "Как использовать build tags?",
    "Что такое cross-compilation?",
    "Как уменьшить бинарный размер?",

    "Как создать распределенную систему на Go?",
    "Что такое service discovery?",
    "Как использовать Consul?",
    "Что такое etcd?",
    "Как реализовать leader election?",
    "Что такое distributed locks?",
    "Как использовать Redis для распределенных блокировок?",
    "Что такое consensus algorithms?",
    "Как работает Raft?",
    "Что такое distributed transactions?",
    "Как реализовать saga pattern?",
    "Что такое event-driven architecture?",
    "Как использовать message brokers?",
    "Что такое Kafka с Go?",
    "Как работать с NATS?",

    "Как обеспечить безопасность Go приложений?",
    "Что такое OWASP для Go?",
    "Как предотвратить SQL injection?",
    "Что такое XSS защита?",
    "Как реализовать CSRF protection?",
    "Что такое JWT в Go?",
    "Как работать с OAuth2?",
    "Что такое crypto package?",
    "Как использовать TLS?",
    "Что такое mTLS?",

    "Как настроить CI/CD для Go?",
    "Что такое GoReleaser?",
    "Как создать Docker образ для Go?",
    "Что такое multi-stage builds?",
    "Как уменьшить размер Docker образа?",
    "Что такое Kubernetes для Go приложений?",
    "Как настроить health checks?",
    "Что такое readiness и liveness probes?",
    "Как мониторить Go приложения?",
    "Что такое Prometheus для Go?",

    "Какие лучшие практики Go?",
    "Что такое Go code review comments?",
    "Как использовать golangci-lint?",
    "Что такое static analysis?",
    "Какие тренды в Go сообществе?",
  ];
}
